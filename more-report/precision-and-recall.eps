%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 267.250000 213.250000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.1 (Build 16B2555) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 268 214
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 268 214
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Thonburi
%!FontType1-1.0: Thonburi 1.0000.1.0000
14 dict begin/FontName /Thonburi def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /D put
dup 34 /o put
dup 35 /c put
dup 36 /u put
dup 37 /m put
dup 38 /e put
dup 39 /n put
dup 40 /t put
dup 41 /space put
dup 42 /l put
dup 43 /i put
dup 44 /R put
dup 45 /colon put
dup 46 /r put
dup 47 /v put
dup 48 /a put
dup 49 /d put
dup 50 /A put
dup 51 /s put
dup 52 /w put
dup 53 /h put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2560 -1531 1 index div -1463 2 index div 3957 3 index div 3585 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C0000001E6670676D00000000000000BC00000173676C796600000000000002300000174C68656164000000000000197C000000366868656100000000000019B400000024686D747800000000000019D80000005C6C6F63610000000000001A34000000306D6178700000000000001A6400000020707265700000000000001A8400000096004000C100AF00D500E900E900FD0000003BFDE10028057400280794003B0000B800002C4BB800035058B101018E59B801FF85B800441DB9000300035F5E2DB800012C2020456944B001602DB800022CB800012A212DB800032C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800042C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800052C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800062C2020456944B001602020457D691844B001602DB800072CB800062A2DB800082C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800092C4B535845441B2121592D00000200A000000460097D000300070058B800082FB800052FB8000810B80000D0B800002FB8000510B900030005F4B8000010B900040005F4B8000310B80009DC00B800004558B800002F1BB9000000073E59BB00020002000600042BB8000010B900040002F430313311211125211121A003C0FCE00280FD80097DF683A0083D000200DF00000229057400030007004FBB00000006000100042BB8000010B80004D0B8000110B80005D000B800004558B800062F1BB90006000B3E59B800004558B800002F1BB9000000073E59B900020004F4B8000610B900040004F4303129011121112111210229FEB6014AFEB6014A014A02E0014A00000200270000071F07940007000A004000B800004558B800022F1BB90002000D3E59B800004558B800002F1BB9000000073E59B800004558B800042F1BB9000400073E59BB00090001000600042B303121230133012103213721010111EA031BFF02DEFEEFC9FCA84C02C1FEAC0794F86C0216C203850000000200B80000068E0794000A00150097B800162FB800102FB8001610B80000D0B800002F410500EA001000FA001000025D41110069001000790010008900100099001000A9001000B9001000C9001000D9001000085DB8001010B900060006F4
B8000010B9000B0006F4B8000610B80017DC00B800004558B800012F1BB90001000D3E59B800004558B800002F1BB9000000073E59B9000B0003F4B8000110B900140001F4303133112120041211100204212521202412353402242901B802180187016BCCB8FE8BFE92FEC1012A010A010F9083FEF3FEE1FEDC0794D4FE4BFEC7FEDAFE51FDD69C014EFCFD016CAC00000200B8000005DF07940015002000C4B800212FB8001B2FB8002110B80001D0B800012FB900000006F4410500EA001B00FA001B00025D41110069001B0079001B0089001B0099001B00A9001B00B9001B00C9001B00D9001B00085DB8001B10B900070006F4BA000B00010007111239B8000010B80016D0B8000710B80022DC00B800004558B800022F1BB90002000D3E59B800004558B800002F1BB9000000073E59B800004558B800102F1BB9001000073E59BB00170001001400042BBA000B00140017111239B8000210B9001F0001F4303121231121321E0115140E01071E02170121012627233533323E0135342E01232101B4FC0258DDDF82589FA63F3E5A220135FEDFFEF3619DFFF79CA15F4B91AEFEF707947FF28D72D0A942233F8C3DFDC201FEB98BC260B8695B90610000020088FFD9050A059C0022002F0140B800302FB8002F2FB80002D0B8003010B80008D0B800082FB8002F10B8000CD0B8000810B900270006F441110066002700760027008600270096002700A6002700B6002700C6002700D6002700085D410500E5002700F5002700025DB80013D0B800132FB8000810B80015D0B800152FB8002F10B9001F0005F4B80031DC00B800004558B8001A2F1BB9001A000B3E59B800004558B800002F1BB9000000073E59B800004558B800052F1BB9000500073E59BA00020005001A111239B8001A10B900100002F4410500E9001000F9001000025D41110068001000780010008800100098001000A8001000B8001000C8001000D8001000085DB8000510B9002B0002F441110067002B0077002B0087002B0097002B00A7002B00B7002B00C7002B00D7002B00085D410500E6002B00F6002B00025DBA00220005002B11123930312126350E0123222635342425373534262322061D01233534362433321E0115111416170107040615141E0133323E013504152499D863A6EF0151019B7DAD7991A2FD9C01039A98FA730928FEE746FE9EC53A733961BD6971519752CCB3CADC50189E80687F5514125DC5645FA1DEFDE159C48202C111579B6B375F3572BE7E0000010074FFD9050A059B001F00DFBB00190005000900042B41110066001900760019008600190096001900A6001900B6001900C6001900D6001900085D410500E5001900F5001900025D00B800004558B8000C2F1BB9000C000B3E59B800004558B800062F1BB9000600073E59B90000
0004F4B8000C10B900160001F4410500E9001600F9001600025D41110068001600780016008800160098001600A8001600B8001600C8001600D8001600085DB8000610B9001C0001F441110067001C0077001C0087001C0097001C00A7001C00B7001C00C7001C00D7001C00085D410500E6001C00F6001C00025D3031013315140E0123200011100021321E011D0123353626232202111012333236350420EA8DE5A1FECBFEB2014E0135A1E58DEA048D94AFEDEDAF948901670D5DBE660188015A0159018765B06C0C0C4C73FEFFFEE3FEE2FEFE734C0000020074FFD9056007E200130020013EB800212FB800002FB900010005F4B8000010B80003D0B8002110B8000CD0B8000C2FBA0004000C0001111239B8000010B80014D0B8000C10B9001A0005F441110066001A0076001A0086001A0096001A00A6001A00B6001A00C6001A00D6001A00085D410500E5001A00F5001A00025DB8000110B80022DC00B800002FB800004558B8000F2F1BB9000F000B3E59B800004558B800022F1BB9000200073E59B800004558B800082F1BB9000800073E59BA000400080000111239BA001300080000111239B8000F10B900170001F4410500E9001700F9001700025D41110068001700780017008800170098001700A8001700B8001700C8001700D8001700085DB8000810B9001D0001F441110067001D0077001D0087001D0097001D00A7001D00B7001D00C7001D00D7001D00085D410500E6001D00F6001D00025D303101331123350E022322240235100021321E0117113402232202111016333236120478E8E84787A9539DFEF794013401135A9D7C4ACDB9AAE1D9AC6FBF5E07E2F81EF387692AAE0159D7013F01A5336582FE3AED0131FEF2FEF4FEC6F487010700000000020074FFD9053A059B0018002100F5B800222FB8001A2FB80000D0B800002FB8001A10B900100005F4B80001D0B800012FB8002210B80009D0B800092FB900120005F4B80019D0B800192FB8001010B80023DC00B800004558B8000C2F1BB9000C000B3E59B800004558B800062F1BB9000600073E59BB001A0002001100042BB8000610B900000004F4B8000610B900150001F441110067001500770015008700150097001500A7001500B7001500C7001500D7001500085D410500E6001500F6001500025DB8000C10B9001F0001F4410500E9001F00F9001F00025D41110068001F0078001F0088001F0098001F00A8001F00B8001F00C8001F00D8001F00085D3031013315140E0123200011100021320412111521141233323635012135342E012322060448E994F29EFEC2FEA5016F01209F010296FC20F2D59A8DFD2102F25EA56E82DC01670D5CC164019D013B014201A889FEDCFEFC4DE0FEDE774801F21B62B858D0000100B80000053007E2001700B6B800


52AA532B3B38FEE4FEF0ADE3870171055A778C5F813624193265EBA5FAD6820505465074554151211F183028202D7F55C6FEF267B577000000010058FFD9040E06BE001700B0BB00120005000700042BB8000710B8000BD0B8001210B8000DD000B8000C2FB800004558B8000A2F1BB9000A000B3E59B800004558B8000E2F1BB9000E000B3E59B800004558B800032F1BB9000300073E59BA00000003000C111239B8000E10B900080001F4B80009D0B80010D0B80011D0B8000310B900160001F441110067001600770016008700160097001600A7001600B7001600C7001600D7001600085D410500E6001600F6001600025D303125150623222E01351123353311331121152111141E013332040EAA5A82D16DF2F2E90197FE69397C5645C6C32A69C8DB02CEC1014AFEB6C1FD74B98F4400000100A5FFD9051D0574001500C3B800162FB800002FB900010005F4B8000010B80003D0B8001610B8000BD0B8000B2FBA0004000B0001111239B9000E0005F4B8000110B80017DC00B800004558B800002F1BB90000000B3E59B800004558B8000C2F1BB9000C000B3E59B800004558B800022F1BB9000200073E59B800004558B800082F1BB9000800073E59BA000400080000111239B900110003F441110067001100770011008700110097001100A7001100B7001100C7001100D7001100085D410500E6001100F6001100025D303101331123350E0223222419013311101633323E01350434E9E9488C9457C2FEF2E9A27868B86C0574FA8CF471703ADB014B0375FCEDFECE8079DBC30001001D0000058705740006004000B800004558B800012F1BB90001000B3E59B800004558B800042F1BB90004000B3E59B800004558B800002F1BB9000000073E59BA0003000000011112393031210133090133010256FDC7FA01BF01CAE7FDB70574FBB90447FA8C00000000010027000007A705740015005800B800004558B800012F1BB90001000B3E59B800004558B800072F1BB90007000B3E59B800004558B8000D2F1BB9000D000B3E59B800004558B800002F1BB9000000073E59B800004558B8000F2F1BB9000F00073E5930312101331317333713330117333713330123012723070101B6FE71F4F6201B24F9E901162F1925F6DCFE71EBFEE1271429FEF80574FC9CD0D00364FC9ED2D20362FA8C0391CACAFC6F00000003004CFE1F0B0105B00013004800530126BB00520005001D00042BBB00140005002200042BBB00380005003900042BBB00000005000100042BBA000A001D0000111239BA002900220014111239BA00420022001411123941110066005200760052008600520096005200A6005200B6005200C6005200D6005200085D410500E5005200F5005200025D00B800002FB800382FB800004558B800182F1BB9001800073E59

00>] def
/CharStrings 23 dict dup begin
/.notdef 0 def
/space 1 def
/colon 2 def
/A 3 def
/D 4 def
/R 5 def
/a 6 def
/c 7 def
/d 8 def
/e 9 def
/h 10 def
/i 11 def
/l 12 def
/m 13 def
/n 14 def
/o 15 def
/r 16 def
/s 17 def
/t 18 def
/u 19 def
/v 20 def
/w 21 def
/luthai_saraaathai 22 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.000390625 0 0 0.000390625 0 0 ] def
/FontBBox{-1531 -1463 3957 3585}def
/UniqueID 4158355 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C92615E2133941906A02CAE799EFE07355B68024211C14942A28E4AFD6A322333B1C46AB8169FEAEF70C0DE7CC0D8B8F6DB13FDF14CD596BA8DC9B864196903D9EE24F47C74393BE1A8DA503BA643A0E93547FBFFEA9A55BD9FCE484FE29B501CCCA545A99B9D4E94E5E8B4ED5C064B96329640A761F97DEA0D1F87E27425D5EE234C9EE3C341BBFFF7A83A450402F2A30E70B935D1A83755458E47A15C652840DD6873E92921A386E3615CB5B2DD7AB46838ECA7D1CE486F753FECC621A8748C9DD31FA89CD80113191529BDF6DCF8C3661431683920BF42A1D5273098666A7F5B4C3B0658A29CB0E5DA723A3F61EFD67825DC8FD8A55C72C79B6FC9398F4636047355A7F9A7BE24E78F5416F5E2F43D04419A76F698389DB2EEB2E3FA320AE4C9FF6F996B3778398419CFF36CCCC88D8D80E0EBB18C6F773C1DBCC623808F768B357DA73F5BA744A8889B898E9B45EC88A715B4A5BF64514D3B6394A51F868C44482882953AEE281AA40489506DBA8DBBF99C550BA425BDCD93749D51630BD4B680403B79CB3C794FA05AEE16A92E7CDCE87CCF9F14131E2A9231E66CB1192BC2338C317B11A97FF3BF6C7F200F625B0C817AD56690F7D13C1BBDB29D81B3E921102CE7FA34E5B6D07D2B29EA6967A10AA68184B2F402FD6CAA7E6612966FF6615C24091BDB700F2296E213274A9C73F09D4FDC9A144C4F6829BA7483083B3BA2621015F32166807153E665FA83846865E8D7058546690603EC72BAFFA6478181

58398DD2DC3CFBDCA4B7755F4A4401AF4C6FF9BFDA1E9916438417708A422E6F196AC7A5A5E9703F67B9A119B805AFCB32D46CF779EFACD3D4C8AE3CA46885FAEE6379C11643D57FA8FD03F66A3C907CB64A5F1CCD37E3D1E0724236FC02905910DCD317F11DC8F5C0F618B2F9D73CD049655E86AF3382DC15D814EDFD3859694224DB7DA9B0E427C29351592A1456628CF40B3453C5ED894CC08DDDB2CD4070AEDDE26C9D906F65FCFE2D2AE53C695A6A050C2AE3FA7EEC0B3B94BD05A2A292FE591D673A98FBC69BC9FBBFB2261799078C40DD919EB19DA329626FAE1EADFCE3AD0D083D60F02907634CB5CE96BD63A6CEE56B25620DABF015E0EEB8490013468C5E6C1A8E4F356944B103F546E47B71EEDD3E190F7564640ECE7663925C11C497A71E6F70B0C50B68300571145602DBFAABB1C8FCEAFBD6E1A1E05DE2E90188953E6CCD06576E8620C1FA45938739A87655B753DB59B1EBFFCE51EA291CA00C1B80C1BDE50DCF49A59E1961C44F634BA3F784A0ED4B79B28689490EC933D0B17793BEE0EA734EABF79E4E9FFEEEC4ACED09F68815F4CA77CB771A59BEC1ECC905374F959AB085D7B1F359015D68F32616DFC180EF0AFE5B5937C28FD54958CBE49D48CD76123F86319958F8285A5FAA80779D745ECF895AAB4504E58570A33F5D4E0809594BB78BB95920CEC20E7FFEDA9EF7157D1A5375F988CD7395779A4B500BF2E6B2595F44371719CD489F4DDE235AA8FA16C18517138E402B374E51CC3BDBC70F53F07E26A3E8F42775C83FE5D7D71CD3EBD72A64DAA71FFF797E8076678CDA1DC4790F36312A0BBD03C69FBB313179FC3864131AE12F52096957901B5025D0D12180593D5DFCA97C5F2C0FDB83311FC537A28FD5FB9E64E608A834082EDE1BA3368F5A3073B5D85B5F97EC28A5587C5DCEEA56B1C096500D66C3609FD21FF110F87313BE1FDA9C5A596AF86E20BD2DDB253596C3C8BEF2541BF3BCE992912C2878D2AD456C2D1F34C0B4E5B3718390DED0C650C1B951A8D6A3FB437BF358D9C7641FF4400AFA5F4ED92F7C4F2373B06041063FE89D4F5CC71FD93A00489E44B0514444365A0C82C55B1182A343B180FB99F96D2065C010CF6FFC97401086FDDC8FEA99F1D892C245C34AAD16FADC7DF3F573F7EDF963327A52CADB8A265555CC4944ACE0286AF015F1DF19325991E24DE9FE1801288493FA4723738E73CF2CA8DBA86946EC40559BEB036FCD2BDE44542F251E952B7380092CBC4E6DDFD48C9AFD3C197FEE1A0EB2966BFDDA3CACAC3D67369EB846430662B7B89DD345148C76187B8A5BC0A4810D48C2BB95B5A9419D08CCB91EB6CCCFF68F16AED2520146F26C07FAA56CE3C081354AC29521980488C1F7CFEC7536B13CCE00B66E9B48C8169F3DC63C78BBC25073C5F05924AD976341938DB07F5AD212C22337
B83C40B11475CCD13EDF3434456BC0E94333B974FA293E348AC74CBBDFD3579A7A8ECABAFEF83E0FDB19A6C624711086B4B8196B43A8B18DBFC0FF4F35B065C53F110D8F4F008E20CDF2B0ACC195A3D76CF595E39458E47B022FF745506CFC97364EB6BB0E554C76081663E82ACDC3C3066B9F72DCFC639ACBC190BDB45BEED98DD7A05A37ACC568401D798A8AAC06B7662ACD619C5BA6CC8EA67105D84CB451D01212CA3438F20841CFFDF3D0A89E840DF79C0C174A1126A646C4067CEBC2C5A5AF36197E99E9F8BF673F39F983DCE898C148CB0A776485E213B7E40F1FBC956368A4F7F5782F11915EFF81A46688507024FE138A54F35B5CD12582BFFE1F4106D7CB01CE62FEBF89C383ADEB9BA96763FB0FE66DC8594712AC51F8EE983BA11FFD01DFA61B680DC2C08D74BF2F3EA062D565438829A4D16BC46AFD565E3D6D9F06EC743C3CDD9AF57928D79BC15D7561030B4BC3A22737FA463950DA31AFF8048550DF8D49E3DEC7F1A4B07532F4D084F9B86ADE49AD7F9463822C612EA4DA4C4BEDB316F2D3FCF9824CF8B5126C830A7865908B796CCB238219EB6194E97D394EC0E6E656BEF2198CF720DC63FE8650FC337669FEB699DFADCF1DA46CB32593399F4CD92ED896FD710970750905EC292103CF612446081770AFEE59B39AE08BFFB960606D8C7CB599E1A80D5A43EEC569A74B8C1D1042DAE447973CF44D8A07E467B3FB9DEEA43D98A93754E88B3C0B0D4465286D2B029968A890F7FAE92ADF4B10D8034A609AF4CDCEB264BBAE23F49D531165AFA6E3CDC53A7A125E60660D0E5B3E33EAFB238F4BD799AB2C2A0508C31E3F97E92066D7E649CCCE3208384EDF456372CA4D5D25D6217EC201EE54F0054FDD3FB9C83E1B6EB8EA4B04C50ED5097EEDC80878208FFB60149DE9902B1BF188EEF98410EB87CF104976F21D24ABFCD56F2955A74DD34C55C9B03B0833BADCC99C91B2F04A3477C493547386BFF89256CC6E7793D3F4B5DE06EB881FB5469A42FAF642C1679839763E55B6E4B3EFEB39BDE57B1C13CFCDFB213F7AEC043667E34133ED56FBAF194A29C83E3B2B8C85451EFD9F0129F59334552A1277B101CF26DB596C34363116244AA96E0E4C82DD699A9904DB92016A0FED09BE50F801EFEC683D490F2E93EE310E2AF9A5086B0D41C89A557142CAD4B14592DE446507DEA0CEECDF744EBE9F0C2255512A48671A5210F95582EB0E9CC0760EB4F260EAAE07A84F50B427F85E49E10C13E386645B72498230313888F91F39514DC8459E4474A250873FE18045E8684E52A1EC47695214AD3D1404EB70F72B04B3E832A838409FB2E09BBC57C2AC1F453ADF9D97008B95A7122C6E6CA6C87C0E795E91198B4DC2806706A4AC6C5FD1E425D8B0FB737C0F6F76DB108B98DCBC2550B56D2ADBA646761C11C63ACECFDF69
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Thonburi cguidfix
/F1.1/Thonburi renmfont
%RBIBeginFontSubset: AppleSymbols
%!FontType1-1.0: AppleSymbols 1.0000.5.0000
14 dict begin/FontName /AppleSymbols def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /uni2229 put
dup 34 /space put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -658 1 index div -743 2 index div 6283 3 index div 1966 5 -1 roll div]cvx def
/sfnts [<

00>] def
/CharStrings 4 dict dup begin
/.notdef 0 def
/space 1 def
/uni2229 2 def
/uni16F0 3 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-658 -743 6283 1966}def
/UniqueID 4059904 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C94CF017316529A80F552C33559AB2C21302561FE61E935C1E32B3C99A1EB5A3F66344A17D2F5847AE611537239524A7C92DD74D59EF3B2D75B0F2B1426702723E8311AAC47F2333354A2672646E1DAF61DDE503E95A11C2C2EDC2A86A4D2559C857F7169BBE90FD50AB8717DC23F3DD206F18837574F001810C3E5B559AA2AF495BC44CF6AE3B40F7E98E3C73C17CC7CDA2A6370EA37E1B5157BCB53038E64BFAAD4C28E452254BD7C70AFE3C5FFB3A415778E20074DE5862A2EE4324D439E8A73E98ECB76889CE266E688FBB4E2C8452AEA1476CB400EC588DE7AF27779AD4905E679A47ACDE712A6EE8A6982131E82018BE9FE970D2DAC1CEFC1EE3F1E93CAC3758A678599C040C3791951AD23671BE497068F934F93F2833A44D45A372CDDFEA52AEBEE83FC22001DAC3F57F23F2D9496C69E72D58A6DADA63C88B60284AD9627D9694373643F412DE00B831D533FEFAA7E81CA3085E36BC481F82CCC35B0F42B12BC8B2B5243A134C86CF8DDDDB6F429BBB91AEEC4216D17280A1DAA7BF43A69487B2CB50BC0A13087F522C1A674E4B1EA214FD8491D4E0EB728A1A99B2C52A9B0B70F6BE15F85547C698E86339426DCD804F457267626A5B3108CFECF6C58E8DA464E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/AppleSymbols cguidfix
/F2.1/AppleSymbols renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 267.25 213.25 rc
-131.875 426.125 m
713.125 426.125 l
713.125 -374.875 l
-131.875 -374.875 l
h
-131.875 426.125 m
f
/Cs2 SC
0 sc
1 0 0 -1 75.125 191.125 cm
/F1.1[ 10 0 0 -10 0 0]sf
-58 4.1659851 m
(!"#$%&'\(\)#"**&#\(+"')[ 7.007812 6.058594 5.453125 5.835938 8.941406 5.757812 5.835938 4.433594 3.320312 5.453125 6.058594 2.347656 2.347656 5.757812 5.453125 4.433594 2.347656 6.058594 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
12.125 183.125 m
255.125 183.125 l
255.125 75.125 l
12.125 75.125 l
h
12.125 183.125 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -131.875 426.125 cm
144 243 m
387 243 l
387 351 l
144 351 l
h
144 243 m
S
260.58536 261.22617 m
283.13824 273.52768 283.13824 293.47232 260.58536 305.77383 c
238.03261 318.07541 201.46739 318.07541 178.91463 305.77383 c
156.36176 293.47232 156.36176 273.52768 178.91463 261.22617 c
201.46739 248.92459 238.03261 248.92459 260.58536 261.22617 c
S
338.58536 261.22617 m
361.13824 273.52768 361.13824 293.47232 338.58536 305.77383 c
316.03262 318.07541 279.46738 318.07541 256.91464 305.77383 c
234.36176 293.47232 234.36176 273.52768 256.91464 261.22617 c
279.46738 248.92459 316.03262 248.92459 338.58536 261.22617 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 43.625 94.125 cm
-26.5 -2.6680298 m
(,-\).&*&/0'\(\))[ 6.058594 3.031250 3.320313 3.863281 5.757812 2.347656 5.757812 5.644531 5.531250 5.835938 4.433594 0.000000 ] xS
-26.5 11 m
(1"#$%&'\()[ 6.019531 6.058594 5.453125 5.835937 8.941406 5.757812 5.835938 0.000000 ] xS
1 0 0 -1 196.625 92.125 cm
-35.5 4.1659851 m
(2-\)0'34&.\)3&\()[ 7.269531 3.031250 3.320312 5.531250 5.835937 5.093750 7.804688 5.757813 3.863281 3.320312 5.093750 5.757812 0.000000 ] xS
/Cs3 SC
1 1 1 sc
CM
62.5 45 m
75.5 45 l
75.5 29 l
62.5 29 l
h
f
/Cs2 SC
0 sc
1 0 0 -1 120.125 30.125 cm
-67 -3.9602356 m
(,\))[ 6.058594 0.000000 ] xS
/Cs3 SC
0.2 0.2 0.2 sc
/F2.1[ 15 0 0 -15 0 0]sf
-57.621094 -3.9602356 m
(!")[ 7.961426 0.000000 ] xS
/Cs2 SC
0 sc
/F1.1[ 10 0 0 -10 0 0]sf
-44.664551 -3.9602356 m
(2-\).&*&/0'\(\)1"#$%&'\(3\))[ 7.269531 3.031250 3.320312 3.863281 5.757812 2.347656 5.757812 5.644531 5.531250 5.835938 4.433594 3.320312 6.019531 6.058594 5.453125 5.835938 8.941406 5.757812 5.835938 4.433594 5.093750 0.000000 ] xS
-67 12.292206 m
(+'\)\(5&\)0'34&.\)3&\()[ 2.347656 5.835938 3.320312 4.433594 5.835938 5.757812 3.320312 5.531250 5.835938 5.093750 7.804688 5.757812 3.863281 3.320312 5.093750 5.757812 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -131.875 426.125 cm
253.57458 376 m
260.50281 288 l
S
ep
end
%%Trailer
%%EOF
